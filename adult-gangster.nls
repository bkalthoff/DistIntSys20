adult-gangsters-own [
  role
  age
  status
  money
  hometerritory
  home-id
  next-task
  stoppedByPolice
  stoppedByAdult
  isCarryingDrugs
  gangster-hideout
  homexy array
  
  gangMembers
  gang
  
  
  adult-current-customer
  pickup-place
  drugOrders
  isWorking?
  adult-gangster-drugs-delivered?
 ;Maybe change name later, increase when delivered drugs, decrease when gangster goes to jail?
  status
  leader?
  ;Distrust against gang leader
  distrust
]

; the set up needs to implement the new terretories, 
to setup-adult-Gangster
  
  let Q number-of-adultGangster 
  ask n-of Q lowerclass
  [sprout-adult-gangsters 1 [ 
    set size 2 
    set shape "person" 
    ifelse random 100 < 49 [set gang red set color red + 2] 
    [
      set gang blue set color blue + 2
    ] 
    set next-task [ -> adult-gangster-idle]] 
    sprout-gangster-homes 1 [set shape "house" set color brown ]
  ]
  
  ask n-of Q middleclass
  
  [sprout-adult-gangsters 1 [
    set size 2 
    set shape "person" 
    ifelse random 100 < 49 [set gang red set color red + 2] 
    [
      set gang blue set color blue + 2
    ]  
    set next-task [ -> adult-gangster-idle]] 
    sprout-gangster-homes 1 [set shape "house" set color brown]
  ]
  
  ask n-of Q upperclass
  
  [sprout-adult-gangsters 1 [
    set size 2    
    set shape "person" 
    ifelse random 100 < 49 [set gang red set color red + 2] 
    [
      set gang blue set color blue + 2
    ]  
    set next-task [ -> adult-gangster-idle]
  ]sprout-gangster-homes 1 [  set shape "house" set color brown]  ]
  
  
  ask adult-gangsters [ 
    set homexy array:from-list n-values 2 [0]
    array:set homexy 0 xcor  array:set homexy 1 ycor   
    set gangster-hideout min-one-of hideouts [distance myself]
    ifelse gang = red
    [setupGangmembers red]
    [setupGangmembers blue]
    
    set isWorking? false
    set drugOrders[]
    
    ;print self print gangMembers
  ]

  ask one-of adult-gangsters with [gang = red] [
      set leader? true
      set size 3
  ]
  
  ask one-of adult-gangsters with [gang = blue] [
      set leader? true
      set size 3
  ]
  
end




;to setup-hidingplaces
;  
;  create-hidingplaces 2 [ 
;    set shape "house"
;    set color green
;    set size 2
;    setxy random-xcor random-ycor
;    set next-task ""
;  ]
;
;end



; in the idle state the gangsters priorites the states
; after each task/state/tick the gangster will come back to the idle state
; to see if they should continue doing what they are doing or if something else with higher priority 
; has been "activated" 
;
to adult-gangster-idle
  ;Dummy code to test distrust variable, should be called a member in the gang gets put in prison
  if random 50 = 0 [
    set distrust distrust + 1
  ]
  
  if (distrust >= count adult-gangsters with [gang = gang]) [
    start-vote
    set distrust distrust - 10
  ]

  ifelse stoppedByPolice = "true" [set next-task  [ -> adult-gangster-stand]][        ; highest priority is to stand still if STOPPED
                                                                                      ;set hidden? false                                                ; for demo purpose
    let policeClose police in-cone 4 35                                               ; see if there is police in the gangsters line of sight
    ifelse any? policeClose [set next-task [ -> adult-gangster-hide]] [ ; police is in line of sight hide
      set next-task [-> adult-gangster-work]
    ]
    
    
  ]
  ; <------------------------------------------ astronomical-day-state = "day" doesnt work  old code ---- ifelse astronomical-day-state = "day" [set next-task [-> adult-gangster-work]
  
end



; the gangsters does not have a home right now
; so during the night they are just standing still
;
to adult-gangster-go-home
  
  if (distancexy array:item homexy 0 array:item homexy 1 > 1)
  [set heading towardsxy array:item homexy 0 array:item homexy 1
    forward 0.25
  ]
  set next-task [ -> adult-gangster-idle]
end



; when the police orders the gangster to stand still they come to this state and stand still
; the stoppedByPolice should be toggled by the police when they are finished searching the gangster
;
to adult-gangster-stand
  
  set stoppedByPolice "false"                                               ; this should be toggled by the police 
  fd 0
  set next-task [-> adult-gangster-idle]      
  
end



; if there is police in the gangsters line of sight we come to this state
; the gangster will walk to the closest hiding place, when finished
;
to adult-gangster-hide                               
  ; lt 180                                                                      ; turn 180 degrees and walk that way
  ; set hidden? true                                     ; for demo purpose
  
  face gangster-hideout
  forward 0.25
  ifelse ticks mod 50 = 0 and distance gangster-hideout < 0.3 [
    set next-task [ -> adult-gangster-idle] 
  ][           
    set next-task [ -> adult-gangster-hide]
  ]
  
end



; here we will implement  another statemachine for working with actions such as
; take drug orders
; tell child-gangsters to deliver orders
; recruit adults to join gang
to adult-gangster-work 
  
  
  set isWorking? true
  
  ifelse empty? drugOrders = false [set next-task [-> drug-order]] [ 
    right random 45
    left random 45
    forward 0.5
    set next-task [ -> adult-gangster-idle]
    
  ]
  
  if adult-gangster-drugs-delivered? = true [
    set status status + 5 + random 10
    set label status
    set next-task [ -> confirm-delivery pickup-place]
  ]
end

to confirm-delivery [place-to-pickup]
  ask adult-current-customer[
    set pickUpPlace place-to-pickup
    set drugsDelivered? true
  ]
  
  set adult-gangster-drugs-delivered? false
  set next-task[-> adult-gangster-idle]
  
end

to drug-order
  
  let closestHideout min-one-of other hideouts [distance myself]
  let childGangsterClose min-one-of other child-gangsters [distance myself]
  set adult-current-customer first drugOrders
  let gangster-order self 
  if childGangsterClose != nobody and [slinging?] of childGangsterClose = false and [hidden?] of childGangsterClose = false [ 
    
    set drugOrders remove-item 0 drugOrders
    
    ask childGangsterClose [
      set hideoutAdress closestHideout
      set adult-gangster-order gangster-order
      set slinging? true
      set next-task [-> recieve-delivery-instructions]   ;  ErsÃ¤tt med att ge delivery instructions
    ]
    
  ]  
  ;set drugOrders remove-item 0 drugOrders  ;-- this should remove the order only when the drugs are delivered. 
  ;show drugOrders
  set size 1
  set stoppedByAdult "false"    
  set next-task [-> adult-gangster-idle]
end

;Kick the leader? Not a state
to start-vote 
  let totalDistrust 0
  
  ask adult-gangsters with [gang = gang] [
    set totalDistrust totalDistrust + distrust
  ]
  
end










