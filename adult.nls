adults-own [
  next-task
  previous-task
  dest
  job?
  sick?
  drugUser?
  money
  salary
  homexy
  homeArea
  state
  stoppedByPolice?
  hasDrugs?
  arrested-time
  orderedDrugs?
  
  inPrison?
  pickUpPlace
  drugsDelivered?
  
  numberOfConvictions
]

to setup-adults
  create-adults number-of-adults [
    setxy 0 0
    set color white
    set shape "person"
    set size 2
    set next-task [ -> adults-go-home ]
    set money 100
    set job? one-of [ true false ]
    set salary 0
    set sick? false
    ;set drugUser? one-of [true false]
    set drugUser? true
    set homexy array:from-list n-values 2 [ 0 ]
    set homeArea 1 + random 3
    adults-moving homeArea
    set hasDrugs? false
    set stoppedByPolice? false
    set arrested-time -1
    set orderedDrugs? false
    set inPrison? false
    set drugsDelivered? false
    set numberOfConvictions 0
  ]
  
  ask adults [
    if job? [
      adults-get-job self
    ]
  ]
end

to adults-go-home
  set state "home"
  if time = 0 [
    ifelse process-probability sickness-probability [
      set sick? true
      set shape "person doctor"
    ] [
      set sick? false
      ifelse job? [
        set shape "person business"
      ] [
        set shape "person"
      ]
    ]
    if job? = false and process-probability job-opportunities [
      adults-get-job self
      set dest [ -> adults-go-home ]
      set next-task [ -> adults-walk array:item homexy 0 array:item homexy 1 ]
    ]
  ]
  ifelse stoppedByPolice? = true [
    set next-task [-> adults-stopped-by-police]
  ] [
    ifelse job? = true [
      ifelse time = 450 [
        set dest [ -> adults-work ]
        set next-task [ -> adults-walk 1 8 ]
      ] [
        if drugUser? = true and process-probability 2 or orderedDrugs? = true [
          set next-task [ -> adults-consuming-drugs ]
        ]
      ]
    ] [
      forward 0.5
      right random 45
      left random 45
    ]
  ]
end

to adults-work
  set state "work"
  ifelse color = green [
    adults-losing-job self
    set dest [ -> adults-go-home ]
    set next-task [-> adults-walk array:item homexy 0 array:item homexy 1]
  ] [
    ifelse time = 850 [
      adults-earn-money self salary
      set dest [ -> adults-go-home ]
      set next-task [-> adults-walk array:item homexy 0 array:item homexy 1]
    ] [
      ; ?
    ]
  ]
end

to adults-walk [ destx desty ]
  set state "walk"
  ifelse distancexy destx desty <= 1 [
    set next-task dest
  ] [
    adults-move-turtle-pos self destx desty
  ]
end

to adults-get-job [ agent ]
  ask agent [
    set job? true
    set shape "person business"
    set salary random 40 + (120 / (homeArea * 0.8)) ; Gives each adult a base salary based on homeArea,
                                                    ; with a random chance to earn up to 40 more of our pretend currency.
  ]
end

to adults-losing-job [ agent ]
  ask agent [
    set job? false
    set shape "person"
    set salary 0
  ]
end

to adults-moving [ area ]
  if area = 1 [
    array:set homexy 0 11
    array:set homexy 1 -11
  ]
  if area = 2 [ ;;middleclass
    array:set homexy 0 11
    array:set homexy 1 11
  ]
  if area = 3 [ ;;lowerclass
    array:set homexy 0 -11
    array:set homexy 1 11
  ]
  set next-task [ -> adults-go-home ]
  set label homeArea
  set label-color green
end

to adults-consuming-drugs
  set state "Consuming-drugs"
  ifelse orderedDrugs? = false [
    if money >= 50 [
      adults-loose-money self 50
      set orderedDrugs? true
      ;order the drugs
      ask one-of adult-gangsters with [ isWorking? = true ] [ 
        set drugOrders lput myself drugOrders
      ]
    ]
    set dest [ -> adults-go-home ]
    set next-task [ -> adults-walk array:item homexy 0 array:item homexy 1 ]
  ] [
    ifelse drugsDelivered? = true [
      set next-task [ -> fetch-drugs ]
    ] [
      set dest [ -> adults-go-home ]
      set next-task [ -> adults-walk array:item homexy 0 array:item homexy 1 ]
    ]
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;remove this once the children have been implemented
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ]  
end

to fetch-drugs
  ifelse distance pickUpPlace > 1 [
    face pickUpPlace
    forward 0.5
  ] [
    set hasDrugs? true
    set drugsDelivered? false
    set color green
    ask pickUpPlace [ set drugs drugs - 1 ]
    set dest [ -> adults-go-home ]
    set next-task [ -> adults-walk array:item homexy 0 array:item homexy 1 ]
  ]
end

to adults-earn-money [ agent amount ]
  ask agent [ set money money + amount ]
end

to adults-loose-money [ agent amount ]
  ask agent [ set money money - amount ]
end

to adults-move-turtle-pos [ source destx desty ]
  ask source [
    if distancexy destx desty > 1 [
      facexy destx desty
      forward 0.5
    ]
  ]
end

to adults-stopped-by-police
  set state "stopped"
  if stoppedByPolice? = false [
    set dest [ -> adults-go-home ]
    set next-task [ -> adults-walk array:item homexy 0 array:item homexy 1 ]
  ]
  if arrested-time != -1 [
    set next-task [ -> adults-go-to-jail ]
    set state "jail"
  ]
end

to adults-go-to-jail
  ifelse distance min-one-of prison [ distance myself ] > 1 [
    set heading towards-nowrap one-of prison with [ count turtles-here = 0 ]
    forward 0.5
  ] [
    if ticks - arrested-time = 500 * numberOfConvictions [
      set arrested-time -1
      set color white
      set stoppedByPolice? false
      adults-losing-job self
      set dest [ -> adults-go-home ]
      set next-task [ -> adults-walk array:item homexy 0 array:item homexy 1 ]
    ]
  ]
end